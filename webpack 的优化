优化分为两部分：
（1） 优化开发体验：目的是提升开发效率
  ● 优化构建速度  1-4
  ● 优化使用体验  5-6
  
（2） 优化输出质量：优化构建输出的要发布到线上的代码，为用户呈现体验更好的网页，
    eg. ●  减少首屏加载的时间  7-12
        ●  提升性能流畅度      13-14
  
1. 缩小文件的搜索范围

2. 使用 DIIPlugin

3. 使用 HappyPack

4. 使用 ParalleUglifyPlugin

5. 使用自动刷新

6. 开启模块热更替

7. 区分环境

8. 压缩代码

9. CDN 加速

10. 使用 Tree Shaking

11. 提取公共代码

12. 分割代码以按需加载

13. 使用 Prepack

14. 开启 Scope Hoisting

15. 输出分析：利用工具快速找出问题的所在

16. 优化总结
  (1) 侧重优化开发体验的文件:  webpack.config.js
  (2) 侧重优化输出质量的文件:  webpack-dist.config.js
